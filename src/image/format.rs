use phf::phf_map;
use yarvk::Format;

static FORMAT_TABLE: phf::Map<i32, u64> = phf_map! {
    0i32=>0,
    1i32=>1,
    2i32=>2,
    3i32=>2,
    4i32=>2,
    5i32=>2,
    6i32=>2,
    7i32=>2,
    8i32=>2,
    9i32=>1,
    10i32=>1,
    11i32=>1,
    12i32=>1,
    13i32=>1,
    14i32=>1,
    15i32=>1,
    16i32=>2,
    17i32=>2,
    18i32=>2,
    19i32=>2,
    20i32=>2,
    21i32=>2,
    22i32=>2,
    23i32=>3,
    24i32=>3,
    25i32=>3,
    26i32=>3,
    27i32=>3,
    28i32=>3,
    29i32=>3,
    30i32=>3,
    31i32=>3,
    32i32=>3,
    33i32=>3,
    34i32=>3,
    35i32=>3,
    36i32=>3,
    37i32=>4,
    38i32=>4,
    39i32=>4,
    40i32=>4,
    41i32=>4,
    42i32=>4,
    43i32=>4,
    44i32=>4,
    45i32=>4,
    46i32=>4,
    47i32=>4,
    48i32=>4,
    49i32=>4,
    50i32=>4,
    51i32=>4,
    52i32=>4,
    53i32=>4,
    54i32=>4,
    55i32=>4,
    56i32=>4,
    57i32=>4,
    58i32=>4,
    59i32=>4,
    60i32=>4,
    61i32=>4,
    62i32=>4,
    63i32=>4,
    64i32=>4,
    65i32=>4,
    66i32=>4,
    67i32=>4,
    68i32=>4,
    69i32=>4,
    70i32=>2,
    71i32=>2,
    72i32=>2,
    73i32=>2,
    74i32=>2,
    75i32=>2,
    76i32=>2,
    77i32=>4,
    78i32=>4,
    79i32=>4,
    80i32=>4,
    81i32=>4,
    82i32=>4,
    83i32=>4,
    84i32=>6,
    85i32=>6,
    86i32=>6,
    87i32=>6,
    88i32=>6,
    89i32=>6,
    90i32=>6,
    91i32=>8,
    92i32=>8,
    93i32=>8,
    94i32=>8,
    95i32=>8,
    96i32=>8,
    97i32=>8,
    98i32=>4,
    99i32=>4,
    100i32=>4,
    101i32=>8,
    102i32=>8,
    103i32=>8,
    104i32=>2,
    105i32=>2,
    106i32=>2,
    107i32=>6,
    108i32=>6,
    109i32=>6,
    110i32=>8,
    111i32=>8,
    112i32=>8,
    113i32=>6,
    114i32=>6,
    115i32=>6,
    116i32=>4,
    117i32=>4,
    118i32=>4,
    119i32=>2,
    120i32=>2,
    121i32=>2,
    122i32=>4,
    123i32=>4,
    124i32=>2,
    125i32=>4,
    126i32=>4,
    127i32=>1,
    128i32=>3,
    129i32=>4,
    130i32=>8,
    131i32=>8,
    132i32=>8,
    133i32=>8,
    134i32=>8,
    135i32=>6,
    136i32=>6,
    137i32=>6,
    138i32=>6,
    139i32=>8,
    140i32=>8,
    141i32=>6,
    142i32=>6,
    143i32=>6,
    144i32=>6,
    145i32=>6,
    146i32=>6,
    147i32=>8,
    148i32=>8,
    149i32=>8,
    150i32=>8,
    151i32=>6,
    152i32=>6,
    153i32=>8,
    154i32=>8,
    155i32=>6,
    156i32=>6,
    157i32=>6,
    158i32=>6,
    159i32=>6,
    160i32=>6,
    161i32=>6,
    162i32=>6,
    163i32=>6,
    164i32=>6,
    165i32=>6,
    166i32=>6,
    167i32=>6,
    168i32=>6,
    169i32=>6,
    170i32=>6,
    171i32=>6,
    172i32=>6,
    173i32=>6,
    174i32=>6,
    175i32=>6,
    176i32=>6,
    177i32=>6,
    178i32=>6,
    179i32=>6,
    180i32=>6,
    181i32=>6,
    182i32=>6,
    183i32=>6,
    184i32=>6,
    1000054000i32=>8,
    1000054001i32=>8,
    1000054002i32=>8,
    1000054003i32=>8,
    1000054004i32=>8,
    1000054005i32=>8,
    1000054006i32=>8,
    1000054007i32=>8,
    1000156007i32=>2,
    1000156008i32=>4,
    1000156009i32=>8,
    1000156017i32=>2,
    1000156018i32=>4,
    1000156019i32=>8,
    1000156000i32=>4,
    1000156001i32=>4,
    1000156010i32=>8,
    1000156011i32=>8,
    1000156020i32=>8,
    1000156021i32=>8,
    1000156027i32=>8,
    1000156028i32=>8,
    1000156002i32=>6,
    1000156003i32=>6,
    1000156012i32=>2,
    1000156013i32=>2,
    1000156022i32=>2,
    1000156023i32=>2,
    1000156029i32=>2,
    1000156030i32=>2,
    1000156004i32=>4,
    1000156005i32=>4,
    1000156014i32=>8,
    1000156015i32=>8,
    1000156024i32=>8,
    1000156025i32=>8,
    1000156031i32=>8,
    1000156032i32=>8,
    1000156006i32=>3,
    1000156016i32=>6,
    1000156026i32=>6,
    1000156033i32=>6,
};

pub trait FormatSize {
    fn format_size(&self) -> u64;
}

impl FormatSize for Format {
    fn format_size(&self) -> u64 {
        *FORMAT_TABLE.get(&self.as_raw()).unwrap()
    }
}
